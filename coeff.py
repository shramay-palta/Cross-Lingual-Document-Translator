# -*- coding: utf-8 -*-
"""Untitled3 (1).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rVLGKsn-AhjGDg3EohMKzpqkszjR0eVh
"""

#Cosine similarity
import re, math
from collections import Counter

WORD = re.compile(r'\w+')

def get_cosine(vec1, vec2):
     intersection = set(vec1.keys()) & set(vec2.keys())
     numerator = sum([vec1[x] * vec2[x] for x in intersection])

     sum1 = sum([vec1[x]**2 for x in vec1.keys()])
     sum2 = sum([vec2[x]**2 for x in vec2.keys()])
     denominator = math.sqrt(sum1) * math.sqrt(sum2)

     if not denominator:
        return 0.0
     else:
        return float(numerator) / denominator

def text_to_vector(text):
      words = WORD.findall(text)
      return Counter(words)

text1 = "Hum dil de chuke sanam"
text2 = "Hum dil de sanam"
vector1 = text_to_vector(text1)
vector2 = text_to_vector(text2)

cosine = get_cosine(vector1, vector2)

print ('Cosine:', cosine)

#f = open(r"C:\Users\Hp\Desktop\English_Updated.txt",'r',encoding = 'utf-8')
#a = f.readline()
#text_to_vector(a)

#applying the function to the datasets.
from itertools import islice
with open(r"C:/Users/RIJUL KATIYAR/Desktop/IR/d4.txt", "r") as infile:
    gen_line = islice(infile, 10)
    for line in gen_line:
        print(line)
        a = text_to_vector(line)
        print(a)
x_av = 0
count = 0       
with open(r"C:/Users/RIJUL KATIYAR/Desktop/IR/re4.txt", "r") as infile:
	
	gen_line = islice(infile, 10)
	for line in gen_line:
		count = count + 1
		print(line)
		b = text_to_vector(line)
		print(b)

		x = get_cosine(a,b)
		x_av += x
		if x > 0:
			print ('Cosine:', x)
print(x_av/count)
		

def file_length(fname):
        with open(fname,encoding = 'utf-8') as f:
                for i, l in enumerate(f):
                        pass
        return i + 1
#print("Number of lines in the file: ",file_length(r"C:\Users\Hp\Desktop\English_updated.txt"))

"""from itertools import islice
with open(r"C:/Users/RIJUL KATIYAR/Desktop/IR/d3.txt", "r") as infile:
    gen_line = islice(infile, 10)
    for line in gen_line:
        print(line)
        a = text_to_vector(line)
        print(a)
        
        with open(r"C:/Users/RIJUL KATIYAR/Desktop/IR/rd2.txt", "r") as infile:
            gen_line = islice(infile, 10)
            for line in gen_line:
                print(line)
                b = text_to_vector(line)
                print(b)
				
                x = get_cosine(a,b)
                if x > 0:
                    print ('Cosine:', x)"""

import re,math
from collections import Counter

WORD = re.compile(r'\w+')

#Program to find Pearson coefficient
def pearson_correlation(numbers_x, numbers_y):
    if numbers_x:
        mean_x = sum(numbers_x)/len(numbers_x)
        mean_y = sum(numbers_y)/len(numbers_y)

        subtracted_mean_x = [i - mean_x for i in numbers_x]
        subtracted_mean_y = [i - mean_y for i in numbers_y]

        x_times_y = [a * b for a, b in list(zip(subtracted_mean_x, subtracted_mean_y))]

        x_squared = [i * i for i in numbers_x]
        y_squared = [i * i for i in numbers_y]

        return sum(x_times_y) / math.sqrt(sum(x_squared) * sum(y_squared))
     
 
def text_to_vector(text):
	words = WORD.findall(text)
	return Counter(words)

file1 = open(r"C:/Users/RIJUL KATIYAR/Desktop/IR/d4.txt", "r")
fild3 = open(r"C:/Users/RIJUL KATIYAR/Desktop/IR/re4.txt", "r")

text1 = 1


while text1:
    text1 = file1.readline()
    text2 = fild3.readline()
    vector1 = text_to_vector(text1)
    vector2 = text_to_vector(text2)
    #print((vector1.values()))
    v1 = list(vector1.values())
    v2 = list(vector2.values())
    temp = pearson_correlation(v1,v2)
    print(temp)

import re,math
from collections import Counter

WORD = re.compile(r'\w+')

#Program to find Pearson coefficient
def pearson_correlation(vec1, vec2):
    if vec1:
        mean1 = sum(vec1)/len(vec1)
        mean2 = sum(vec2)/len(vec2)

        sub1 = [i - mean1 for i in vec1]
        sub2 = [i - mean2 for i in vec2]

        xy = [a * b for a, b in list(zip(sub1, sub2))]

        x_squared = [i * i for i in vec1]
        y_squared = [i * i for i in vec2]

        return sum(xy) / math.sqrt(sum(x_squared) * sum(y_squared))
     
 
def text_to_vector(text):
	words = WORD.findall(text)
	return Counter(words)

file1 = open(r"C:/Users/RIJUL KATIYAR/Desktop/IR/d4.txt", "r")
fild3 = open(r"C:/Users/RIJUL KATIYAR/Desktop/IR/re4.txt", "r")

text1 = 1

temp_av = 0.0
count = 0
while text1:
	count = count + 1
	text1 = file1.readline()
	text2 = fild3.readline()
	vector1 = text_to_vector(text1)
	vector2 = text_to_vector(text2)
	#print((vector1.values()))
	v1 = list(vector1.values())
	v2 = list(vector2.values())
	temp = pearson_correlation(v1,v2)
	print(temp)
	temp_av = temp + temp_av
print("av")
print(temp_av/count)
	

